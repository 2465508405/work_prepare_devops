


mysql索引原理和优化方法：


理解mysql innodb的索引原理


b+tree相对于其他索引数据结构的优势.  : b+数只在叶子结点存储数据， b数在叶子结点及非叶子结点都存储数据，单个结点的数据更少，在相同的I/O次数下，可以查询更多的结点； b+树叶子结点采用的是双向链表，基于范围的查找更加方便，b树无法做到这一点，
二叉树的结点父结点只能有两个字结点，二叉树的层级更多



从低到高的索引操作顺序：
all(全表扫描） < index(全索引扫描) < range (索引范围扫描) < ref(非唯一索引扫描) < eq_ref(唯一索引扫描) < const(结果只有一条的主键或唯一索引扫描)

possible_keys:可能用到的索引
key:字段实际用到的索引
ken_len:索引的长度
rows:扫面的行数
type: 扫描类型
掌握mysql执行计划的方法


掌握导致索引失效的常见情况

掌握实际工作中常用的建立高效索引的技巧





死锁是如何产生的？  以及如何避免死锁?    线程A与线程B对资源进行相互竞争，等待释放的过程产生的阻塞



